{"version":3,"sources":["Exp.ts"],"names":["ENTRY_POINT_PLATFORM_TEMPLATE_STRING","determineEntryPointAsync","projectRoot","exp","pkg","ConfigUtils","readConfigJsonAsync","entryPoint","main","userDefinedEntryPointExists","fs","pathExists","path","resolve","resolveModule","expoEntryPointExists","relative","Error","Transformer","Minipass","constructor","config","data","write","end","replaced","replace","displayName","name","toLowerCase","binaryExtensions","createFileTransform","transformFile","entry","includes","extname","undefined","extractAndInitializeTemplateApp","templateSpec","packageManager","Logger","notifications","info","code","NotificationCode","PROGRESS","extractTemplateAppAsync","appFile","JsonFile","join","appJson","readAsync","writeAsync","packageFile","packageJson","private","version","description","tags","repository","_resolved","_integrity","_from","initGitRepoAsync","installDependenciesAsync","targetPath","tarStream","pacote","tarball","stream","cache","UserSettings","dotExpoHomeDirectory","mkdirp","Promise","reject","extractStream","tar","x","cwd","strip","transform","onentry","test","type","basename","on","pipe","root","insideGit","global","debug","e","errno","warn","stdio","saveRecentExpRootAsync","recentExpsJsonFile","recentExps","filter","dir","unshift","slice","getHomeDir","process","env","platform","makePathReadable","pth","homedir","substr","length","expInfoSafeAsync","icon","iconUrl","pathOrUrl","resolvedPath","existsSync","readableRoot","getThirdPartyInfoAsync","publicUrl","user","UserManager","ensureLoggedInAsync","username","ThirdParty","getManifest","slug","sdkVersion","iosBundleIdentifier","ios","bundleIdentifier","androidPackage","android","package","args","remoteUsername","remotePackageName","remoteFullPackageName","getPublishInfoAsync","configName","configFilename","recentValidExpsAsync","results","all","map","filteredResults","result","sendAsync","recipient","url_","allowUnauthed","Api","callMethodAsync","getProjectRandomnessAsync","ps","ProjectSettings","randomness","urlRandomness","resetProjectRandomnessAsync","UrlUtils","someRandomness","setAsync","clearXDLCacheAsync","removeSync"],"mappings":"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","sourcesContent":["import * as ConfigUtils from '@expo/config';\nimport { AppJSONConfig, BareAppConfig } from '@expo/config';\nimport fs from 'fs-extra';\nimport merge from 'lodash/merge';\nimport path from 'path';\nimport spawnAsync from '@expo/spawn-async';\nimport JsonFile from '@expo/json-file';\nimport Minipass from 'minipass';\nimport pacote, { PackageSpec } from 'pacote';\nimport tar from 'tar';\n\nimport Api from './Api';\nimport Logger from './Logger';\nimport NotificationCode from './NotificationCode';\nimport * as ThirdParty from './ThirdParty';\nimport UserManager from './User';\nimport * as UrlUtils from './UrlUtils';\nimport UserSettings from './UserSettings';\nimport * as ProjectSettings from './ProjectSettings';\n\n// FIXME(perry) eliminate usage of this template\nexport const ENTRY_POINT_PLATFORM_TEMPLATE_STRING = 'PLATFORM_GOES_HERE';\n\n// TODO(ville): update when this has landed: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36598\ntype ReadEntry = any;\n\n// TODO(Bacon): Add support for index.ts, index.tsx, index.jsx, index.mjs, index.ios.js...\n// TODO(Bacon): Test monorepos with expo/AppEntry module path\nexport async function determineEntryPointAsync(projectRoot: string): Promise<string> {\n  let { exp, pkg } = await ConfigUtils.readConfigJsonAsync(projectRoot);\n\n  // entryPoint is relative to the packager root and main is relative\n  // to the project root. So if your rn-cli.config.js points to a different\n  // root than the project root, these can be different. Most of the time\n  // you should use main.\n  let entryPoint = pkg.main || 'index.js';\n  if (exp && exp.entryPoint) {\n    entryPoint = exp.entryPoint;\n  }\n\n  const userDefinedEntryPointExists = await fs.pathExists(path.resolve(projectRoot, entryPoint));\n  if (!userDefinedEntryPointExists) {\n    entryPoint = ConfigUtils.resolveModule('expo/AppEntry', projectRoot, exp);\n    const expoEntryPointExists = await fs.pathExists(entryPoint);\n    // Remove project root from file path\n    entryPoint = path.relative(projectRoot, entryPoint);\n    // Final existence check\n    if (!expoEntryPointExists) {\n      throw new Error(\n        `The project entry file could not be resolved. Please either define it in the \\`package.json\\` (main), \\`app.json\\` (expo.entryPoint), create an \\`index.js\\`, or install the \\`expo\\` package.`\n      );\n    }\n  }\n\n  return entryPoint;\n}\n\nclass Transformer extends Minipass {\n  data: string;\n  config: AppJSONConfig | BareAppConfig;\n\n  constructor(config: AppJSONConfig | BareAppConfig) {\n    super();\n    this.data = '';\n    this.config = config;\n  }\n  write(data: string) {\n    this.data += data;\n    return true;\n  }\n  end() {\n    let replaced = this.data\n      .replace(/Hello App Display Name/g, this.config.displayName || this.config.name)\n      .replace(/HelloWorld/g, this.config.name)\n      .replace(/helloworld/g, this.config.name.toLowerCase());\n    super.write(replaced);\n    return super.end();\n  }\n}\n\n// Binary files, don't process these (avoid decoding as utf8)\nconst binaryExtensions = ['.png', '.jar'];\n\nfunction createFileTransform(config: AppJSONConfig | BareAppConfig) {\n  return function transformFile(entry: ReadEntry) {\n    if (!binaryExtensions.includes(path.extname(entry.path)) && config.name) {\n      return new Transformer(config);\n    }\n    return undefined;\n  };\n}\n\nexport async function extractAndInitializeTemplateApp(\n  templateSpec: PackageSpec,\n  projectRoot: string,\n  packageManager: 'yarn' | 'npm' = 'npm',\n  config: AppJSONConfig | BareAppConfig\n) {\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Extracting project files...');\n  await extractTemplateAppAsync(templateSpec, projectRoot, config);\n\n  // Update files\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Customizing project...');\n\n  let appFile = new JsonFile(path.join(projectRoot, 'app.json'));\n  let appJson = merge(await appFile.readAsync(), config);\n  await appFile.writeAsync(appJson);\n\n  let packageFile = new JsonFile(path.join(projectRoot, 'package.json'));\n  let packageJson = await packageFile.readAsync();\n  // Adding `private` stops npm from complaining about missing `name` and `version` fields.\n  // We don't add a `name` field because it also exists in `app.json`.\n  packageJson = { ...packageJson, private: true };\n  // These are metadata fields related to the template package, let's remove them from the package.json.\n  delete packageJson.name;\n  delete packageJson.version;\n  delete packageJson.description;\n  delete packageJson.tags;\n  delete packageJson.repository;\n  // pacote adds these, but we don't want them in the package.json of the project.\n  delete packageJson._resolved;\n  delete packageJson._integrity;\n  delete packageJson._from;\n  await packageFile.writeAsync(packageJson);\n\n  await initGitRepoAsync(projectRoot);\n  await installDependenciesAsync(projectRoot, packageManager);\n\n  return projectRoot;\n}\n\nexport async function extractTemplateAppAsync(\n  templateSpec: PackageSpec,\n  targetPath: string,\n  config: AppJSONConfig | BareAppConfig\n) {\n  let tarStream = await pacote.tarball.stream(templateSpec, {\n    cache: path.join(UserSettings.dotExpoHomeDirectory(), 'template-cache'),\n  });\n  await fs.mkdirp(targetPath);\n  await new Promise((resolve, reject) => {\n    const extractStream = tar.x({\n      cwd: targetPath,\n      strip: 1,\n      // TODO(ville): pending https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36598\n      // @ts-ignore property missing from the type definition\n      transform: createFileTransform(config),\n      onentry(entry: ReadEntry) {\n        if (config.name) {\n          // Rewrite paths for bare workflow\n          entry.path = entry.path\n            .replace(/HelloWorld/g, config.name)\n            .replace(/helloworld/g, config.name.toLowerCase());\n        }\n        if (/^file$/i.test(entry.type) && path.basename(entry.path) === 'gitignore') {\n          // Rename `gitignore` because npm ignores files named `.gitignore` when publishing.\n          // See: https://github.com/npm/npm/issues/1862\n          entry.path = entry.path.replace(/gitignore$/, '.gitignore');\n        }\n      },\n    });\n    tarStream.on('error', reject);\n    extractStream.on('error', reject);\n    extractStream.on('close', resolve);\n    tarStream.pipe(extractStream);\n  });\n\n  return targetPath;\n}\n\nasync function initGitRepoAsync(root: string) {\n  // let's see if we're in a git tree\n  let insideGit = true;\n  try {\n    await spawnAsync('git', ['rev-parse', '--is-inside-work-tree'], {\n      cwd: root,\n    });\n    Logger.global.debug('New project is already inside of a git repo, skipping git init.');\n  } catch (e) {\n    if (e.errno == 'ENOENT') {\n      Logger.global.warn('Unable to initialize git repo. `git` not in PATH.');\n    }\n    insideGit = false;\n  }\n\n  if (!insideGit) {\n    try {\n      await spawnAsync('git', ['init'], { cwd: root });\n      Logger.global.info('Initialized a git repository.');\n    } catch (e) {\n      // no-op -- this is just a convenience and we don't care if it fails\n    }\n  }\n}\n\nasync function installDependenciesAsync(projectRoot: string, packageManager: 'yarn' | 'npm') {\n  Logger.global.info('Installing dependencies...');\n\n  if (packageManager === 'yarn') {\n    await spawnAsync('yarnpkg', ['install'], {\n      cwd: projectRoot,\n      stdio: 'inherit',\n    });\n  } else {\n    await spawnAsync('npm', ['install'], {\n      cwd: projectRoot,\n      stdio: 'inherit',\n    });\n  }\n}\n\nexport async function saveRecentExpRootAsync(root: string) {\n  root = path.resolve(root);\n\n  // Write the recent Exps JSON file\n  const recentExpsJsonFile = UserSettings.recentExpsJsonFile();\n  let recentExps = await recentExpsJsonFile.readAsync();\n  // Filter out copies of this so we don't get dupes in this list\n  recentExps = recentExps.filter((dir: string) => dir !== root);\n  recentExps.unshift(root);\n  return await recentExpsJsonFile.writeAsync(recentExps.slice(0, 100));\n}\n\nfunction getHomeDir(): string {\n  return process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME'] || '';\n}\n\nfunction makePathReadable(pth: string) {\n  let homedir = getHomeDir();\n  if (pth.substr(0, homedir.length) === homedir) {\n    return `~${pth.substr(homedir.length)}`;\n  } else {\n    return pth;\n  }\n}\n\nexport async function expInfoSafeAsync(root: string) {\n  try {\n    let {\n      exp: { name, description, icon, iconUrl },\n    } = await ConfigUtils.readConfigJsonAsync(root);\n    let pathOrUrl =\n      icon || iconUrl || 'https://d3lwq5rlu14cro.cloudfront.net/ExponentEmptyManifest_192.png';\n    let resolvedPath = path.resolve(root, pathOrUrl);\n    if (fs.existsSync(resolvedPath)) {\n      icon = `file://${resolvedPath}`;\n    } else {\n      icon = pathOrUrl; // Assume already a URL\n    }\n\n    return {\n      readableRoot: makePathReadable(root),\n      root,\n      name,\n      description,\n      icon,\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\ntype PublishInfo = {\n  args: {\n    username: string;\n    remoteUsername: string;\n    remotePackageName: string;\n    remoteFullPackageName: string;\n    sdkVersion: string;\n    iosBundleIdentifier?: string;\n    androidPackage?: string;\n  };\n};\n\nexport async function getThirdPartyInfoAsync(publicUrl: string): Promise<PublishInfo> {\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (!user) {\n    throw new Error('Attempted to login in offline mode. This is a bug.');\n  }\n\n  const { username } = user;\n\n  const exp = await ThirdParty.getManifest(publicUrl);\n  const { slug, sdkVersion, version } = exp;\n  if (!sdkVersion) {\n    throw new Error(`sdkVersion is missing from ${publicUrl}`);\n  }\n\n  if (!slug) {\n    // slug is made programmatically for app.json\n    throw new Error(`slug field is missing from exp.json.`);\n  }\n\n  if (!version) {\n    throw new Error(`Can't get version of package.`);\n  }\n\n  const iosBundleIdentifier = exp.ios ? exp.ios.bundleIdentifier : null;\n  const androidPackage = exp.android ? exp.android.package : null;\n  return {\n    args: {\n      username,\n      remoteUsername: username,\n      remotePackageName: slug,\n      remoteFullPackageName: `@${username}/${slug}`,\n      sdkVersion,\n      iosBundleIdentifier,\n      androidPackage,\n    },\n  };\n}\n\n// TODO: remove / change, no longer publishInfo, this is just used for signing\nexport async function getPublishInfoAsync(root: string): Promise<PublishInfo> {\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (!user) {\n    throw new Error('Attempted to login in offline mode. This is a bug.');\n  }\n\n  let { username } = user;\n\n  const { exp } = await ConfigUtils.readConfigJsonAsync(root);\n\n  const name = exp.slug;\n  const { version, sdkVersion } = exp;\n\n  const configName = ConfigUtils.configFilename(root);\n\n  if (!sdkVersion) {\n    throw new Error(`sdkVersion is missing from ${configName}`);\n  }\n\n  if (!name) {\n    // slug is made programmatically for app.json\n    throw new Error(`slug field is missing from exp.json.`);\n  }\n\n  if (!version) {\n    throw new Error(`Can't get version of package.`);\n  }\n\n  const remotePackageName = name;\n  const remoteUsername = username;\n  const remoteFullPackageName = `@${remoteUsername}/${remotePackageName}`;\n  const iosBundleIdentifier = exp.ios ? exp.ios.bundleIdentifier : null;\n  const androidPackage = exp.android ? exp.android.package : null;\n\n  return {\n    args: {\n      username,\n      remoteUsername,\n      remotePackageName,\n      remoteFullPackageName,\n      sdkVersion,\n      iosBundleIdentifier,\n      androidPackage,\n    },\n  };\n}\n\nexport async function recentValidExpsAsync() {\n  let recentExpsJsonFile = UserSettings.recentExpsJsonFile();\n  let recentExps = await recentExpsJsonFile.readAsync();\n\n  let results = await Promise.all(recentExps.map(expInfoSafeAsync));\n  let filteredResults = results.filter(result => result);\n  return filteredResults;\n}\n\nexport async function sendAsync(recipient: string, url_: string, allowUnauthed: boolean = true) {\n  let result = await Api.callMethodAsync('send', [recipient, url_, allowUnauthed]);\n  return result;\n}\n\n// TODO: figure out where these functions should live\nexport async function getProjectRandomnessAsync(projectRoot: string) {\n  let ps = await ProjectSettings.readAsync(projectRoot);\n  let randomness = ps.urlRandomness;\n  if (randomness) {\n    return randomness;\n  } else {\n    return resetProjectRandomnessAsync(projectRoot);\n  }\n}\n\nexport async function resetProjectRandomnessAsync(projectRoot: string) {\n  let randomness = UrlUtils.someRandomness();\n  ProjectSettings.setAsync(projectRoot, { urlRandomness: randomness });\n  return randomness;\n}\n\nexport async function clearXDLCacheAsync() {\n  let dotExpoHomeDirectory = UserSettings.dotExpoHomeDirectory();\n  fs.removeSync(path.join(dotExpoHomeDirectory, 'ios-simulator-app-cache'));\n  fs.removeSync(path.join(dotExpoHomeDirectory, 'android-apk-cache'));\n  fs.removeSync(path.join(dotExpoHomeDirectory, 'starter-app-cache'));\n  Logger.notifications.info(`Cleared cache`);\n}\n"],"file":"../Exp.js","sourceRoot":"/@expo/xdl@56.8.2/src"}